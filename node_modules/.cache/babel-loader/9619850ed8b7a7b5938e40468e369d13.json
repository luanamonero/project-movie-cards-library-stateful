{"ast":null,"code":"var _jsxFileName = \"/home/luana/newstateful/sd-014-b-project-movie-cards-library-stateful/src/components/MovieLibrary.jsx\";\nimport React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\nimport movies from '../data';\nimport MovieList from './MovieList';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSearchTextChange = ({\n      target\n    }) => {\n      const listMov = movies;\n\n      if (target.name === 'searchText') {\n        this.filterByText(target.value.toLowerCase());\n      } else {\n        this.setState({\n          movies: listMov\n        });\n      }\n    };\n\n    this.filterByText = text => {\n      const listMovies = movies;\n      const filter = listMovies.filter(element => element.title.toLowerCase().includes(text) || element.subtitle.toLowerCase().includes(text) || element.storyline.toLowerCase().includes(text));\n      this.setState({\n        movies: filter\n      });\n    };\n\n    this.onSelectedGenreChange = ({\n      target\n    }) => {\n      const listMov = movies;\n\n      if (target.name === 'selectedGenre') {\n        this.filterByGenre(target.value);\n      } else {\n        this.setState({\n          movies: listMov\n        });\n      }\n    };\n\n    this.filterByGenre = select => {\n      const listMovies = movies;\n      const filterGenre = listMovies.filter(element => select ? element.genre === select : listMovies);\n      this.setState({\n        movies: filterGenre\n      });\n    };\n\n    this.onBookmarkedChange = ({\n      target\n    }) => {\n      const listMov = movies;\n\n      if (target.name === 'bookmarkedOnly') {\n        this.filterByFavorite(target.value);\n      } else {\n        this.setState({\n          movies: listMov\n        });\n      }\n    };\n\n    this.filterByFavorite = check => {\n      const listMovies = movies;\n      const filterCheck = listMovies.filter(element => check ? element.bookmarked === true : element);\n      this.setState({\n        movies: filterCheck\n      });\n    };\n\n    const {\n      movies: _movies\n    } = this.props;\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: _movies\n    };\n    this.onSearchTextChange = this.onSearchTextChange.bind(this);\n    this.onBookmarkedChange = this.onBookmarkedChange.bind(this);\n    this.onSelectedGenreChange = this.onSelectedGenreChange.bind(this);\n  }\n\n  render() {\n    const {\n      searchText,\n      bookmarkedOnly,\n      selectedGenre,\n      movies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      searchText: searchText,\n      onSearchTextChange: this.onSearchTextChange,\n      bookmarkedOnly: bookmarkedOnly,\n      onBookmarkedChange: this.onBookmarkedChange,\n      selectedGenre: selectedGenre,\n      onSelectedGenreChange: this.onSelectedGenreChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MovieList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddMovie, {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default MovieLibrary;","map":{"version":3,"sources":["/home/luana/newstateful/sd-014-b-project-movie-cards-library-stateful/src/components/MovieLibrary.jsx"],"names":["React","Component","SearchBar","AddMovie","movies","MovieList","MovieLibrary","constructor","props","onSearchTextChange","target","listMov","name","filterByText","value","toLowerCase","setState","text","listMovies","filter","element","title","includes","subtitle","storyline","onSelectedGenreChange","filterByGenre","select","filterGenre","genre","onBookmarkedChange","filterByFavorite","check","filterCheck","bookmarked","state","searchText","bookmarkedOnly","selectedGenre","bind","render","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\nimport movies from '../data';\nimport MovieList from './MovieList';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n    const { movies } = this.props;\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies,\n    };\n    this.onSearchTextChange = this.onSearchTextChange.bind(this);\n    this.onBookmarkedChange = this.onBookmarkedChange.bind(this);\n    this.onSelectedGenreChange = this.onSelectedGenreChange.bind(this);\n  }\n\n  onSearchTextChange = ({ target }) => {\n    const listMov = movies;\n    if (target.name === 'searchText') {\n      this.filterByText(target.value.toLowerCase());\n    } else {\n      this.setState({\n        movies: listMov,\n      });\n    }\n  }\n\n  filterByText= (text) => {\n    const listMovies = movies;\n    const filter = listMovies.filter((element) => element.title\n      .toLowerCase().includes(text)\n    || element.subtitle.toLowerCase().includes(text)\n    || element.storyline.toLowerCase().includes(text));\n    this.setState({\n      movies: filter,\n    });\n  }\n\n  onSelectedGenreChange= ({ target }) => {\n    const listMov = movies;\n    if (target.name === 'selectedGenre') {\n      this.filterByGenre(target.value);\n    } else {\n      this.setState({\n        movies: listMov,\n      });\n    }\n  }\n\n  filterByGenre = (select) => {\n    const listMovies = movies;\n    const filterGenre = listMovies\n      .filter((element) => (select ? element.genre === select : listMovies));\n    this.setState({\n      movies: filterGenre,\n    });\n  }\n\n  onBookmarkedChange = ({ target }) => {\n    const listMov = movies;\n    if (target.name === 'bookmarkedOnly') {\n      this.filterByFavorite(target.value);\n    } else {\n      this.setState({\n        movies: listMov,\n      });\n    }\n  }\n\n  filterByFavorite = (check) => {\n    const listMovies = movies;\n    const filterCheck = listMovies\n      .filter((element) => (check ? element.bookmarked === true\n        : element));\n    this.setState({\n      movies: filterCheck,\n    });\n  };\n\n  render() {\n    const { searchText, bookmarkedOnly, selectedGenre, movies } = this.state;\n    return (\n      <div>\n        <SearchBar\n          searchText={ searchText }\n          onSearchTextChange={ this.onSearchTextChange }\n          bookmarkedOnly={ bookmarkedOnly }\n          onBookmarkedChange={ this.onBookmarkedChange }\n          selectedGenre={ selectedGenre }\n          onSelectedGenreChange={ this.onSelectedGenreChange }\n        />\n        <MovieList movies={ movies } />\n        <AddMovie onClick={ this.handleClick } />\n      </div>\n    );\n  }\n}\n\nexport default MovieLibrary;\n"]},"metadata":{},"sourceType":"module"}