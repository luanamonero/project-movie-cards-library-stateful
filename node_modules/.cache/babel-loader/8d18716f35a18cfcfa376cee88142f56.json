{"ast":null,"code":"var _jsxFileName = \"/home/luana/newstateful/sd-014-b-project-movie-cards-library-stateful/src/components/MovieLibrary.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\nimport MovieList from './MovieList';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addMovie = movie => {\n      this.setState(previousState => ({\n        movies: [...previousState.movies, movie]\n      }));\n    };\n\n    const {\n      movies\n    } = this.props;\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies\n    };\n    this.onSearchTextChange = this.onSearchTextChange.bind(this);\n    this.onBookmarkedChange = this.onBookmarkedChange.bind(this);\n    this.onSelectedGenreChange = this.onSelectedGenreChange.bind(this);\n  }\n\n  onSearchTextChange({\n    target\n  }) {\n    this.setState({\n      searchText: target.value\n    });\n    this.filterMoviesByText(target.value.toLowerCase());\n  }\n\n  onBookmarkedChange({\n    target\n  }) {\n    this.setState({\n      bookmarkedOnly: target.checked\n    });\n    this.filterMoviesByFavorite(target.checked);\n  }\n\n  onSelectedGenreChange({\n    target\n  }) {\n    this.setState({\n      selectedGenre: target.value\n    });\n    this.filterMoviesByGenre(target.value);\n  }\n\n  filterMoviesByGenre(genre) {\n    const {\n      movies\n    } = this.props;\n    const allMovies = [...movies];\n    this.setState({\n      movies: allMovies.filter(movie => genre ? movie.genre === genre : movies)\n    });\n  }\n\n  filterMoviesByFavorite(check) {\n    const {\n      movies\n    } = this.props;\n    const allMovies = [...movies];\n    this.setState({\n      movies: allMovies.filter(movie => check ? movie.bookmarked === check : movies)\n    });\n  }\n\n  filterMoviesByText(search) {\n    const {\n      movies\n    } = this.props;\n    const allMovies = [...movies];\n    this.setState({\n      movies: allMovies.filter(movie => search ? movie.title.toLowerCase().includes(search) || movie.subtitle.toLowerCase().includes(search) || movie.storyline.toLowerCase().includes(search) : movies)\n    });\n  }\n\n  render() {\n    const {\n      searchText,\n      bookmarkedOnly,\n      selectedGenre,\n      movies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      searchText: searchText,\n      onSearchTextChange: this.onSearchTextChange,\n      bookmarkedOnly: bookmarkedOnly,\n      onBookmarkedChange: this.onBookmarkedChange,\n      selectedGenre: selectedGenre,\n      onSelectedGenreChange: this.onSelectedGenreChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MovieList, {\n      movies: movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AddMovie, {\n      onClick: this.addMovie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf(Object).isRequired\n};\nexport default MovieLibrary;","map":{"version":3,"sources":["/home/luana/newstateful/sd-014-b-project-movie-cards-library-stateful/src/components/MovieLibrary.jsx"],"names":["React","Component","PropTypes","SearchBar","AddMovie","MovieList","MovieLibrary","constructor","props","addMovie","movie","setState","previousState","movies","state","searchText","bookmarkedOnly","selectedGenre","onSearchTextChange","bind","onBookmarkedChange","onSelectedGenreChange","target","value","filterMoviesByText","toLowerCase","checked","filterMoviesByFavorite","filterMoviesByGenre","genre","allMovies","filter","check","bookmarked","search","title","includes","subtitle","storyline","render","propTypes","arrayOf","Object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\nimport MovieList from './MovieList';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n    const { movies } = this.props;\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies,\n    };\n    this.onSearchTextChange = this.onSearchTextChange.bind(this);\n    this.onBookmarkedChange = this.onBookmarkedChange.bind(this);\n    this.onSelectedGenreChange = this.onSelectedGenreChange.bind(this);\n  }\n\n  onSearchTextChange({ target }) {\n    this.setState({\n      searchText: target.value,\n    });\n    this.filterMoviesByText(target.value.toLowerCase());\n  }\n\n  onBookmarkedChange({ target }) {\n    this.setState({\n      bookmarkedOnly: target.checked,\n    });\n    this.filterMoviesByFavorite(target.checked);\n  }\n\n  onSelectedGenreChange({ target }) {\n    this.setState({\n      selectedGenre: target.value,\n    });\n    this.filterMoviesByGenre(target.value);\n  }\n\n  filterMoviesByGenre(genre) {\n    const { movies } = this.props;\n    const allMovies = [...movies];\n\n    this.setState({\n      movies: allMovies.filter((movie) => (genre\n        ? movie.genre === genre : movies)),\n    });\n  }\n\n  filterMoviesByFavorite(check) {\n    const { movies } = this.props;\n    const allMovies = [...movies];\n\n    this.setState({\n      movies: allMovies.filter((movie) => (check\n        ? movie.bookmarked === check : movies)),\n    });\n  }\n\n  filterMoviesByText(search) {\n    const { movies } = this.props;\n    const allMovies = [...movies];\n\n    this.setState({\n      movies: allMovies.filter((movie) => (search\n        ? movie.title.toLowerCase().includes(search)\n        || movie.subtitle.toLowerCase().includes(search)\n        || movie.storyline.toLowerCase().includes(search) : movies)),\n    });\n  }\n\n  addMovie =(movie) => {\n    this.setState((previousState) => ({\n      movies: [...previousState.movies, movie],\n    }));\n  }\n\n  render() {\n    const { searchText, bookmarkedOnly, selectedGenre, movies } = this.state;\n    return (\n      <div>\n        <SearchBar\n          searchText={ searchText }\n          onSearchTextChange={ this.onSearchTextChange }\n          bookmarkedOnly={ bookmarkedOnly }\n          onBookmarkedChange={ this.onBookmarkedChange }\n          selectedGenre={ selectedGenre }\n          onSelectedGenreChange={ this.onSelectedGenreChange }\n        />\n        <MovieList movies={ movies } />\n        <AddMovie onClick={ this.addMovie } />\n      </div>\n    );\n  }\n}\n\nMovieLibrary.propTypes = {\n  movies: PropTypes.arrayOf(Object).isRequired,\n};\n\nexport default MovieLibrary;\n"]},"metadata":{},"sourceType":"module"}